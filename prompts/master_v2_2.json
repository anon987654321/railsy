{
  "schema_version": "2.2",
  "core": {
    "mode": "active_with_environment_isolation",
    "enforcement": {
      "trigger": "project_context_detected",
      "all_workflows_enforce_principles_including_solid_and_parametric_design": true
    },
    "safety_limits": {
      "recursion": {
        "max_depth": 3,
        "protection": "max_depth_3_halt"
      },
      "circuit_breaker": {
        "failure_threshold": 3,
        "unified_strategy": true
      },
      "emergency_halt": "user_intervention_required",
      "timeout": {
        "max_execution_time_seconds": 300,
        "protection": "graceful_halt_with_partial_results"
      }
    }
  },
  "principles": {
    "full_input_internalization": {
      "description": "Mandate complete input processing as default scope unless explicitly instructed otherwise",
      "enforcement": "mandatory",
      "scope": "all_input_types",
      "standards_compliance": {
        "iso_9001_2015": "quality_assurance_alignment",
        "w3c_svg_xml": "complete_processing_validation"
      },
      "default_behavior": "process_entire_input_completely"
    },
    "assumption_prevention": {
      "description": "Framework must prompt for clarification rather than make assumptions about user intent",
      "trigger": "ambiguous_instructions_detected",
      "action": "request_explicit_clarification"
    }
  },
  "reasoning": {
    "detection": {
      "method": "pattern_match_ask_unclear"
    },
    "temperature": {
      "self_analysis": 0.2,
      "optimization": 0.4,
      "creative": 0.7
    }
  },
  "execution_workflows": {
    "input_scope_validation": {
      "description": "3-phase workflow to ensure complete input processing",
      "phases": [
        {
          "name": "input_scope_detection",
          "description": "Analyze user intent to determine if full or partial input processing is intended",
          "validation": "intent_classification_complete",
          "decision_matrix": {
            "explicit_full_scope": "proceed_to_full_processing",
            "explicit_partial_scope": "proceed_to_confirmed_partial_processing", 
            "ambiguous_scope": "proceed_to_scope_clarification"
          }
        },
        {
          "name": "scope_clarification",
          "description": "Prompt user when input scope is ambiguous to prevent assumption-based errors",
          "trigger": "ambiguous_scope_detected",
          "template": "svg_full_internalization_prompt",
          "validation": "user_confirmation_received"
        },
        {
          "name": "full_input_processing",
          "description": "Process entire input unless user explicitly confirmed selective processing",
          "default_behavior": "complete_input_internalization",
          "validation": "input_scope_fidelity_check",
          "coverage_threshold": "100_percent"
        }
      ]
    },
    "self_analysis": [
      "detect_recursion",
      "analyze_self",
      "prevent_loops", 
      "generate_improvements"
    ],
    "optimization": [
      "identify_redundancy",
      "enhance_efficiency",
      "validate_changes"
    ],
    "safety_check": [
      "recursion_detection",
      "integrity_validation",
      "rollback_preparation"
    ]
  },
  "rules": {
    "default_full_input_usage": {
      "description": "Enforce using entire provided input unless user explicitly specifies selective elements",
      "priority": "high",
      "enforcement": "mandatory_unless_explicitly_overridden",
      "validation": "verify_complete_input_utilization"
    },
    "scope_fidelity_validation": {
      "description": "Verify output incorporates entire input with 100% coverage threshold",
      "coverage_requirement": "100_percent",
      "validation_method": "comprehensive_input_mapping",
      "failure_action": "request_scope_clarification"
    }
  },
  "validation": {
    "input_scope_fidelity": {
      "description": "Validate that outputs use the full input unless explicitly instructed otherwise", 
      "coverage_threshold": "100_percent",
      "validation_criteria": [
        "all_input_elements_processed",
        "no_selective_omissions_without_explicit_instruction",
        "complete_scope_coverage_verified"
      ],
      "failure_handling": "trigger_scope_clarification_workflow"
    }
  },
  "prompts": {
    "svg_full_internalization": {
      "description": "Template for complete SVG processing with intent clarification",
      "template": "I notice you've provided an SVG input. To ensure I meet your expectations:\n\n- Should I process the ENTIRE SVG with all elements, paths, and components?\n- Or do you want me to focus on specific parts only?\n\nBy default, I will internalize and process the complete SVG unless you specify otherwise. This ensures full scope fidelity and prevents assumption-based errors.\n\nPlease confirm your intent so I can proceed appropriately.",
      "trigger": "svg_input_detected_with_ambiguous_scope",
      "compliance": "w3c_svg_standards"
    },
    "general_input_clarification": {
      "description": "General template for input scope clarification",
      "template": "I want to ensure I process your input correctly. Should I:\n\n1. Process the ENTIRE input completely (recommended default)\n2. Focus on specific portions only\n\nPlease clarify your intent to prevent assumption-based processing errors.",
      "trigger": "ambiguous_input_scope_detected"
    }
  },
  "quality_assurance": {
    "self_optimization": {
      "philosophy": "surgical_enhancement",
      "forbidden_removals": [
        "security_requirements",
        "accessibility_validation", 
        "architectural_standards",
        "input_internalization_principles"
      ],
      "mandatory_comparison": "before_any_changes"
    },
    "compliance": {
      "iso_9001_2015": {
        "quality_management": "systematic_approach_to_input_processing",
        "continuous_improvement": "autonomous_self_improvement_capabilities",
        "customer_focus": "user_intent_clarification_priority"
      },
      "w3c_standards": {
        "svg_processing": "complete_element_internalization",
        "xml_processing": "full_document_scope_processing"
      }
    }
  },
  "autonomous_capabilities": {
    "self_improvement": {
      "enabled": true,
      "scope": "input_processing_enhancement",
      "preservation": "maintain_backward_compatibility_v2_1"
    },
    "seamless_integration": {
      "existing_workflows": "preserved_and_enhanced",
      "v2_1_compatibility": "full_backward_compatibility"
    }
  },
  "version_history": [
    {
      "version": "2.0",
      "timestamp": "2025-06-24T12:20:42Z",
      "changes": "Initial autonomous framework implementation"
    },
    {
      "version": "2.1", 
      "timestamp": "2025-06-24T12:20:42Z",
      "changes": "Added versioning system for tracking framework evolution"
    },
    {
      "version": "2.2",
      "timestamp": "2025-01-01T00:00:00Z",
      "changes": "Enhanced with Full Input Internalization & Intent Validation capabilities",
      "enhancements": [
        "Added full_input_internalization principle",
        "Implemented input_scope_validation 3-phase workflow", 
        "Added default_full_input_usage rule",
        "Integrated input_scope_fidelity validation with 100% coverage",
        "Enhanced SVG processing prompts with intent clarification",
        "Added ISO 9001:2015 and W3C standards compliance",
        "Maintained backward compatibility with v2.1 features"
      ]
    }
  ]
}